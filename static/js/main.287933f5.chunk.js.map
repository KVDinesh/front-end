{"version":3,"sources":["assets/logo.svg","App/context/auth/authContext.jsx","App/context/auth/authReducer.jsx","App/context/types.js","App/context/auth/AuthProvider.jsx","App/context/global/globalContext.jsx","App/components/LandingPage/LandingPage.jsx","App/components/HomePage/HomePage.jsx","App/components/NotFoundPage/NotFoundPage.jsx","App/components/ProfilePage/ProfilePage.jsx","App/components/Gallery/Gallery.jsx","App/components/Navbar/Navbar.jsx","App/components/routing/PrivateRoute.jsx","App/context/global/globalReducer.jsx","App/context/global/GlobalProvider.jsx","App/components/routing/Routes.jsx","App/App.jsx","serviceWorker.jsx","index.jsx"],"names":["module","exports","authContext","createContext","state","action","type","data","AuthProvider","props","useReducer","authReducer","isAuthenticated","setState","setData","useCallback","emailRegex","BaseURL","login","email","password","a","success","msg","test","fetch","method","body","JSON","stringify","headers","res","json","signUp","confirmPassword","Provider","AuthContext","value","children","globalContext","TabPane","Auth","useState","remember","loginState","setLoginState","signUpState","setSignUpState","useContext","GlobalContext","authToken","isLoggedIn","onChange","e","target","name","onChangeRegister","onSubmit","preventDefault","loginResponse","token","message","error","onSubmitRegister","signUpResponse","className","style","display","alignItems","justifyContent","height","span","offset","id","src","logo","alt","tabPosition","tab","key","placeholder","size","Password","checked","event","alignSelf","block","backgroundColor","borderColor","onClick","fontSize","color","href","LandingContent","LandingPage","history","push","Home","logout","NotFoundPage","ProfilePage","Gallery","NavBar","PrivateRoute","Component","component","rest","render","to","localStorage","setItem","sessionStorage","removeItem","GlobalProvider","initialState","getItem","globalReducer","signOut","Routes","exact","path","HomePage","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.287933f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1ea2d346.svg\";","import { createContext } from \"react\";\n\nconst authContext = createContext();\n\nexport default authContext;\n","import { LOGIN } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        ...action.data\n      };\n    default:\n      return state;\n  }\n};\n","/* eslint-disable import/prefer-default-export */\nexport const EXAMPLE_TYPE = \"EXAMPLE_TYPE\";\nexport const LOGIN = \"LOGIN\";\nexport const LOG_OUT = \"LOG_OUT\";\n","import React, { useReducer, useCallback } from \"react\";\n\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport { LOGIN } from \"../types\";\n\nconst AuthProvider = props => {\n  const initialState = {\n    isAuthenticated: false\n  };\n\n  const [state, setState] = useReducer(authReducer, initialState);\n  const setData = useCallback(\n    data =>\n      setState({\n        type: LOGIN,\n        data\n      }),\n    []\n  );\n\n  const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const BaseURL = \"http://osd-sidekick.herokuapp.com/api/auth\";\n\n  const login = async (email, password) => {\n    /*\n    http://osd-sidekick.herokuapp.com\n    email, password, remember\n  */\n    if (!email) {\n      return { success: false, msg: \"Email can't be empty!\" };\n    }\n    if (!emailRegex.test(email)) {\n      return { success: false, msg: \"Email isn't valid!\" };\n    }\n    if (!password) {\n      return { success: false, msg: \"Password can't be empty!\" };\n    }\n\n    const res = await fetch(`${BaseURL}/login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await res.json();\n    return json;\n  };\n\n  const signUp = async (email, password, confirmPassword) => {\n    /*\n    http://osd-sidekick.herokuapp.com\n    email, password\n  */\n    if (!email) {\n      return { success: false, msg: \"Email can't be empty!\" };\n    }\n    if (!emailRegex.test(email)) {\n      return { success: false, msg: \"Email isn't valid!\" };\n    }\n    if (!password) {\n      return { success: false, msg: \"Password can't be empty!\" };\n    }\n    if (password !== confirmPassword) {\n      return { success: false, msg: \"Passwords must be same!\" };\n    }\n    const res = await fetch(`${BaseURL}/register`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await res.json();\n    return json;\n  };\n\n  const { Provider } = AuthContext;\n\n  return (\n    <Provider\n      value={{\n        state,\n        setState: setData,\n        login,\n        signUp\n      }}\n    >\n      {props.children}\n    </Provider>\n  );\n};\n\nexport default AuthProvider;\n","import { createContext } from \"react\";\n\nconst globalContext = createContext();\n\nexport default globalContext;\n","import React, { useContext, useState } from \"react\";\nimport { Button, Checkbox, Col, Input, message, Row, Tabs } from \"antd\";\nimport logo from \"../../../assets/logo.svg\";\n\nimport AuthProvider from \"../../context/auth/AuthProvider\";\nimport authContext from \"../../context/auth/authContext\";\nimport globalContext from \"../../context/global/globalContext\";\n\nimport \"./LandingPage.css\";\n\nconst { TabPane } = Tabs;\nconst projectColor = \"#3B5999\";\n\nconst Auth = props => {\n  const [loginState, setLoginState] = useState({\n    email: \"\",\n    password: \"\",\n    remember: false\n  });\n  const [signUpState, setSignUpState] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const AuthContext = useContext(authContext);\n  const GlobalContext = useContext(globalContext);\n\n  // Actual functions from auth provider\n  const { login, signUp } = AuthContext;\n\n  if (GlobalContext.state.authToken) {\n    props.isLoggedIn();\n  }\n\n  const onChange = e =>\n    setLoginState({ ...loginState, [e.target.name]: e.target.value });\n\n  const onChangeRegister = e =>\n    setSignUpState({ ...signUpState, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const { email, password, remember } = loginState;\n\n    const loginResponse = await login(email, password);\n\n    const { success, token, msg } = loginResponse;\n\n    if (success) {\n      message.success(\"Login sucessful\");\n      AuthContext.setState({\n        isAuthenticated: true\n      });\n      GlobalContext.setState({\n        authToken: token,\n        remember\n      });\n      props.isLoggedIn();\n    } else {\n      message.error(msg);\n    }\n  };\n\n  const onSubmitRegister = async e => {\n    e.preventDefault();\n\n    const { email, password, confirmPassword } = signUpState;\n\n    const signUpResponse = await signUp(email, password, confirmPassword);\n\n    const { success, msg } = signUpResponse;\n    if (success) {\n      message.success(\"Registration sucessful\");\n    } else {\n      message.error(msg);\n    }\n  };\n\n  return (\n    <div\n      className=\"authentication\"\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      }}\n    >\n      <Col span={20} offset={2}>\n        <div id=\"project-logo\">\n          {/* TEMPORARY PLACEHOLDER FOR LOGO */}\n          <img src={logo} alt=\"\" />\n        </div>\n        <Tabs tabPosition=\"top\">\n          <TabPane tab=\"Login\" key=\"1\">\n            <div className=\"auth_display\">\n              <h1>Welcome Back</h1>\n              <h3>Login to continue</h3>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                value={loginState.email}\n                onChange={onChange}\n                placeholder=\"Email\"\n                size=\"large\"\n              />\n              <Input.Password\n                type=\"password\"\n                name=\"password\"\n                value={loginState.password}\n                onChange={onChange}\n                placeholder=\"Password\"\n                size=\"large\"\n              />\n              <Checkbox\n                checked={loginState.remember}\n                onChange={event => {\n                  setLoginState({\n                    ...loginState,\n                    remember: event.target.checked\n                  });\n                }}\n                style={{ alignSelf: \"left\" }}\n              >\n                Rememeber Me\n              </Checkbox>\n              <Button\n                type=\"primary\"\n                block\n                style={{\n                  height: \"40px\",\n                  backgroundColor: projectColor,\n                  borderColor: projectColor\n                }}\n                onClick={onSubmit}\n              >\n                <span style={{ fontSize: \"16px\" }}>Login</span>\n              </Button>\n              <a style={{ color: projectColor }} href=\"/\">\n                Forgot Password?\n              </a>\n            </div>\n          </TabPane>\n          <TabPane tab=\"Register\" key=\"2\">\n            <div className=\"auth_display\">\n              <h1>Create Your Account</h1>\n              <h3>Register</h3>\n              <Input\n                name=\"email\"\n                value={signUpState.email}\n                onChange={onChangeRegister}\n                placeholder=\"Email\"\n                size=\"large\"\n              />\n              <Input.Password\n                name=\"password\"\n                value={signUpState.password}\n                onChange={onChangeRegister}\n                placeholder=\"New Password\"\n                size=\"large\"\n              />\n              <Input.Password\n                name=\"confirmPassword\"\n                value={signUpState.confirmPassword}\n                onChange={onChangeRegister}\n                placeholder=\"Confirm Password\"\n                size=\"large\"\n              />\n              <Button\n                type=\"primary\"\n                block\n                style={{\n                  height: \"40px\",\n                  backgroundColor: projectColor,\n                  borderColor: projectColor\n                }}\n                onClick={onSubmitRegister}\n              >\n                <span style={{ fontSize: \"16px\" }}>Register</span>\n              </Button>\n            </div>\n          </TabPane>\n        </Tabs>\n      </Col>\n    </div>\n  );\n};\n\nconst LandingContent = () => (\n  <div className=\"container\">\n    <img\n      src=\"https://www.123freevectors.com/wp-content/original/131220-dark-blue-polygon-background-graphic-design.jpg\"\n      alt=\"logo\"\n    />\n  </div>\n);\n\nconst LandingPage = props => {\n  const isLoggedIn = () => {\n    props.history.push(\"/\");\n  };\n  return (\n    <AuthProvider>\n      <Row>\n        <Col\n          span={16}\n          style={{ backgroundColor: projectColor, height: \"100vh\" }}\n        >\n          <LandingContent />\n        </Col>\n        <Col span={8} style={{ backgroundColor: \"#FEFDF9\", height: \"100vh\" }}>\n          <Auth isLoggedIn={isLoggedIn} />\n        </Col>\n      </Row>\n    </AuthProvider>\n  );\n};\n\nexport default LandingPage;\n","import React, { useContext } from \"react\";\n\nimport globalContext from \"../../context/global/globalContext\";\n\nimport \"./HomePage.css\";\n\nconst Home = () => {\n  const GlobalContext = useContext(globalContext);\n\n  const { logout } = GlobalContext;\n\n  return (\n    <div className=\"home-page-container\">\n      <p>Welcome to home page!</p>\n      {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n      <a onClick={logout} href=\"#\">\n        <i className=\"fas fa-sign-out-alt\" />\n      </a>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport \"./NotFoundPage.css\";\n\nexport default function NotFoundPage() {\n  return (\n    <div id=\"notfound\">\n      <div className=\"notfound\">\n        <div className=\"notfound-404\">\n          <h1>Oops!</h1>\n        </div>\n        <h2>404 - Page not found</h2>\n        <p>\n          The page you are looking for might have been removed had its name\n          changed or is temporarily unavailable.\n        </p>\n        <a href=\"/\">Go To Homepage</a>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ProfilePage() {\n  return (\n    <div>\n      <h1>Profile Page works</h1>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Gallery() {\n  return (\n    <>\n      <h1>Gallery Works</h1>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function NavBar() {\n  return (\n    <div>\n      <h1>Navbar Works</h1>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport globalContext from \"../../context/global/globalContext\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { state } = useContext(globalContext);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        state.authToken !== null ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n}\n","import { LOGIN, LOG_OUT } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOGIN:\n      if (action.data.remember) {\n        localStorage.setItem(\"authToken\", action.data.authToken);\n      } else {\n        sessionStorage.setItem(\"authToken\", action.data.authToken);\n      }\n      return {\n        ...state,\n        ...action.data\n      };\n    case LOG_OUT:\n      sessionStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"authToken\");\n      return {\n        ...state,\n        authToken: null\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer, useCallback } from \"react\";\n\nimport globalContext from \"./globalContext\";\nimport globalReducer from \"./globalReducer\";\nimport { LOGIN, LOG_OUT } from \"../types\";\n\nconst GlobalProvider = props => {\n  const initialState = {\n    authToken:\n      sessionStorage.getItem(\"authToken\") || localStorage.getItem(\"authToken\")\n  };\n\n  const [state, setState] = useReducer(globalReducer, initialState);\n\n  const setData = useCallback(data => {\n    setState({\n      type: data.signOut ? LOG_OUT : LOGIN,\n      data\n    });\n  }, []);\n\n  const logout = () => {\n    setState({\n      type: LOG_OUT\n    });\n  };\n\n  const { Provider } = globalContext;\n\n  return (\n    <Provider\n      value={{\n        state,\n        setState: setData,\n        logout\n      }}\n    >\n      {props.children}\n    </Provider>\n  );\n};\n\nexport default GlobalProvider;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"../LandingPage/LandingPage\";\nimport HomePage from \"../HomePage/HomePage\";\nimport NotFoundPage from \"../NotFoundPage/NotFoundPage\";\nimport ProfilePage from \"../ProfilePage/ProfilePage\";\nimport Gallery from \"../Gallery/Gallery\";\nimport NavBar from \"../Navbar/Navbar\";\n\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport GlobalProvider from \"../../context/global/GlobalProvider\";\n\nexport default function Routes() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/login\" component={LandingPage} />\n          <Route exact path=\"/profile\" component={ProfilePage} />\n          <Route exact path=\"/gallery\" component={Gallery} />\n          <Route exact path=\"/navbar\" component={NavBar} />\n          {/* below line for testing */}\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Routes from \"./components/routing/Routes\";\n\nconst App = () => <Routes />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}